import{_ as r,M as t,p as i,q as n,N as d,a1 as h,R as a,t as s}from"./framework-35149b8f.js";const c={},o=h(`<h1 id="mermaid-流程图" tabindex="-1"><a class="header-anchor" href="#mermaid-流程图" aria-hidden="true">#</a> Mermaid 流程图</h1><h2 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法" aria-hidden="true">#</a> 基本语法</h2><p>所有的流程图都是由节点、几何图形和边、箭头或线条组成。美人鱼代码定义了这些节点和边的构成和互动方式。</p><p>它还可以容纳不同的箭头类型，多方向的箭头，以及链接到子图和从子图的链接。</p><p>重要提示：不要把 &quot;结束 &quot; 一词作为流程图的节点来输入。将所有或任何一个字母大写，以保持流程图不被破坏，即 &quot;结束 &quot;或 &quot;END&quot;。或者你可以应用这个变通方法。</p><h3 id="普通结点" tabindex="-1"><a class="header-anchor" href="#普通结点" aria-hidden="true">#</a> 普通结点</h3><div class="language-text" data-ext="text"><pre class="language-text"><code>flowchart LR
    id
</code></pre></div>`,7),l=a("h3",{id:"带有文本的结点",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#带有文本的结点","aria-hidden":"true"},"#"),s(" 带有文本的结点")],-1),u=a("p",null,"也可以在框中设置与id不同的文本。如果这样做了几次，将使用为该节点找到的最后一个文本。另外如果你以后为节点定义边，可以省略文本定义。渲染盒子时将使用之前定义的那个。",-1),x=a("div",{class:"language-text","data-ext":"text"},[a("pre",{class:"language-text"},[a("code",null,`flowchart LR
    id1[This is the text in the box]
`)])],-1),f=h('<h2 id="图表" tabindex="-1"><a class="header-anchor" href="#图表" aria-hidden="true">#</a> 图表</h2><h2 id="流程图方向" tabindex="-1"><a class="header-anchor" href="#流程图方向" aria-hidden="true">#</a> 流程图方向</h2><h2 id="节点形状" tabindex="-1"><a class="header-anchor" href="#节点形状" aria-hidden="true">#</a> 节点形状</h2><h2 id="节点之间的链接" tabindex="-1"><a class="header-anchor" href="#节点之间的链接" aria-hidden="true">#</a> 节点之间的链接</h2><h2 id="打破语法的特殊字符" tabindex="-1"><a class="header-anchor" href="#打破语法的特殊字符" aria-hidden="true">#</a> 打破语法的特殊字符</h2><h2 id="子图" tabindex="-1"><a class="header-anchor" href="#子图" aria-hidden="true">#</a> 子图</h2><h2 id="流程图" tabindex="-1"><a class="header-anchor" href="#流程图" aria-hidden="true">#</a> 流程图</h2><h2 id="子图中的方向" tabindex="-1"><a class="header-anchor" href="#子图中的方向" aria-hidden="true">#</a> 子图中的方向</h2><h2 id="相互作用" tabindex="-1"><a class="header-anchor" href="#相互作用" aria-hidden="true">#</a> 相互作用</h2><h2 id="样式和类" tabindex="-1"><a class="header-anchor" href="#样式和类" aria-hidden="true">#</a> 样式和类</h2><h2 id="对fontawesome的基本支持" tabindex="-1"><a class="header-anchor" href="#对fontawesome的基本支持" aria-hidden="true">#</a> 对fontawesome的基本支持</h2><h2 id="图形声明在顶点和链接之间有空格-没有分号" tabindex="-1"><a class="header-anchor" href="#图形声明在顶点和链接之间有空格-没有分号" aria-hidden="true">#</a> 图形声明在顶点和链接之间有空格，没有分号</h2><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2>',13);function _(m,p){const e=t("Mermaid");return i(),n("div",null,[o,d(e,{id:"mermaid-19",code:"eJxLy8kvT85ILCpR8AniUgCCzBQuAEjsBeo="}),l,u,x,d(e,{id:"mermaid-27",code:"eJxLy8kvT85ILCpR8AniUgCCzBTD6JCMzGIFICrJSFUoSa0oUcjMA7OT8itiuQCjchBu"}),f])}const g=r(c,[["render",_],["__file","flowchart.html.vue"]]);export{g as default};
