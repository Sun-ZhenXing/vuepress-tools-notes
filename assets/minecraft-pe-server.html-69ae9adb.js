import{_ as l,M as o,p,q as i,R as e,N as n,V as t,t as a,a1 as c}from"./framework-546207d5.js";const d={},u=e("h1",{id:"docker-部署-minecraft-pe-服务器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker-部署-minecraft-pe-服务器","aria-hidden":"true"},"#"),a(" Docker 部署 Minecraft PE 服务器")],-1),h={class:"table-of-contents"},v=e("h2",{id:"_1-下载程序并创建容器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-下载程序并创建容器","aria-hidden":"true"},"#"),a(" 1. 下载程序并创建容器")],-1),b={href:"https://www.minecraft.net/zh-hans/download/server/bedrock",target:"_blank",rel:"noopener noreferrer"},m=c(`<p>创建容器：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">--name</span> mc-pe <span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">19132</span>:19132/udp <span class="token punctuation">\\</span>
    <span class="token parameter variable">-p</span> <span class="token number">19133</span>:19133/udp <span class="token punctuation">\\</span>
    <span class="token parameter variable">--volume</span> <span class="token string">&quot;<span class="token environment constant">$PWD</span>/mincraft-pe&quot;</span>:/root <span class="token punctuation">\\</span>
    ubuntu:20.04
</code></pre></div><p>将下载的文件放到 <code>$PWD/mincraft-pe</code> 下面，然后将启动命令作为服务运行。</p><p>其运行命令为：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span>. ./bedrock_server
</code></pre></div><h2 id="_2-mc-服务器管理" tabindex="-1"><a class="header-anchor" href="#_2-mc-服务器管理" aria-hidden="true">#</a> 2. MC 服务器管理</h2><p>本节使用 MCSManager 来创建管理器。</p><p>有用的链接：</p>`,8),_={href:"https://github.com/MCSManager/MCSManager",target:"_blank",rel:"noopener noreferrer"},k={href:"https://mcsmanager.com/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://docs.mcsmanager.com/",target:"_blank",rel:"noopener noreferrer"},f=c(`<p>Linux 下安装构建：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">su</span>
<span class="token function">wget</span> -qO- https://gitee.com/mcsmanager/script/raw/master/setup.sh <span class="token operator">|</span> <span class="token function">bash</span>
<span class="token builtin class-name">exit</span>
</code></pre></div><p>执行后会自动运行守护进程，将服务器程序加入守护进程列表，并监听 23333 端口。</p><p>确保你的服务器防火墙开启了端口 <code>23333</code>，登录 <code>http://&lt;your-ip&gt;:23333</code>，管理服务器程序。</p><h3 id="_2-1-基岩版构建" tabindex="-1"><a class="header-anchor" href="#_2-1-基岩版构建" aria-hidden="true">#</a> 2.1 基岩版构建</h3>`,5),x={href:"https://www.minecraft.net/zh-hans/download/server/bedrock",target:"_blank",rel:"noopener noreferrer"},M={href:"https://minecraft.azureedge.net/bin-linux/bedrock-server-1.18.31.04.zip",target:"_blank",rel:"noopener noreferrer"},D=c(`<p>解压即为服务器程序。如果你希望启动单个实例，并在服务器上直接可用，启动命令如下，这只支持 Ubuntu：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span>. ./bedrock_server
</code></pre></div><p>在 Ubuntu 下直接运行时，可以设置默认选项，然后将退出方式设置为 <code>^C</code> 即可，配置好端口、防火墙等。</p><p>如果需要在 CentOS 等系统中运行，需要使用 Docker 。你可以在上面的管理工具中配置 Docker，这也需要编写 <code>Dockerfile</code> 。</p><p>编写类似下面的 <code>Dockerfile</code>，注意下方代码仅供参考，需要结合自身服务器进行配置：</p><div class="language-Dockerfile line-numbers-mode" data-ext="Dockerfile"><pre class="language-Dockerfile"><code>FROM ubuntu

COPY bedrock-server-1.18.12.01.zip /server/

WORKDIR /server

RUN cd /server \\
    &amp;&amp; apt-get -y install openssl unzip \\
    &amp;&amp; unzip bedrock-server-1.18.12.01.zip

CMD sh ./bedrock_server

EXPOSE 19132 19133
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以构建镜像以备使用：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> nginx:mc_bedrock18_12 <span class="token builtin class-name">.</span>
</code></pre></div><p>当你下次需要一个新的游戏实例时，可以使用 <code>docker run</code> 产生一个新的容器，关于 Docker 的详细信息本文不过多介绍。</p><h3 id="_2-2-java-版本等构建" tabindex="-1"><a class="header-anchor" href="#_2-2-java-版本等构建" aria-hidden="true">#</a> 2.2 Java 版本等构建</h3><p>构建过程基本一致，将启动命令</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>./bedrock_server
</code></pre></div><p>替换为</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> server.jar
</code></pre></div><p>即可，其他配置自行选择。</p>`,15);function C(w,z){const r=o("router-link"),s=o("ExternalLinkIcon");return p(),i("div",null,[u,e("nav",h,[e("ul",null,[e("li",null,[n(r,{to:"#_1-下载程序并创建容器"},{default:t(()=>[a("1. 下载程序并创建容器")]),_:1})]),e("li",null,[n(r,{to:"#_2-mc-服务器管理"},{default:t(()=>[a("2. MC 服务器管理")]),_:1}),e("ul",null,[e("li",null,[n(r,{to:"#_2-1-基岩版构建"},{default:t(()=>[a("2.1 基岩版构建")]),_:1})]),e("li",null,[n(r,{to:"#_2-2-java-版本等构建"},{default:t(()=>[a("2.2 Java 版本等构建")]),_:1})])])])])]),v,e("p",null,[a("在 "),e("a",b,[a("基岩版服务器下载页面"),n(s)]),a(" 下载基岩版 Linux 程序。")]),m,e("ul",null,[e("li",null,[a("GitHub 地址："),e("a",_,[a("https://github.com/MCSManager/MCSManager"),n(s)])]),e("li",null,[a("项目主页："),e("a",k,[a("https://mcsmanager.com/"),n(s)])]),e("li",null,[a("项目文档："),e("a",g,[a("https://docs.mcsmanager.com/"),n(s)])])]),f,e("p",null,[a("如果需要下载基岩版服务器，到 "),e("a",x,[a("官方网站"),n(s)]),a("，直接下载，注意不要跳转到网易我的世界。")]),e("p",null,[a("当前最新版本地址："),e("a",M,[a("https://minecraft.azureedge.net/bin-linux/bedrock-server-1.18.31.04.zip"),n(s)]),a(" （2022-04-28）。")]),D])}const S=l(d,[["render",C],["__file","minecraft-pe-server.html.vue"]]);export{S as default};
