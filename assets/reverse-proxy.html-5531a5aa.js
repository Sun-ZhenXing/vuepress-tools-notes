import{_ as i,r as t,o as d,c as y,b as s,a as n,w as l,d as a,e as c}from"./app-0fdcf1c2.js";const h={},u=s("h1",{id:"ssh-反向代理",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ssh-反向代理","aria-hidden":"true"},"#"),a(" SSH 反向代理")],-1),C={class:"table-of-contents"},E=s("h2",{id:"1-问题描述",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#1-问题描述","aria-hidden":"true"},"#"),a(" 1. 问题描述")],-1),A=s("p",null,"假设当前有一种需求，需要一台机器通过 SSH 连接另一台非公网的机器，而此时可提供一台公网机器作为代理。",-1),b=c(`<p>将 A 作为 B 机器的反向代理，在 B 机器上进行代理转发即可。B 暴露 7280 端口用于与 A 通信，同时 B 暴露 10022 端口用于与 C 通信。</p><div class="hint-container info"><p class="hint-container-title">远程服务器防火墙</p><p>确保远程服务器的防火墙已经允许上述两个端口。</p><p>建议：B 机器创建一个用户仅用于代理，而不是使用 root 用户。</p></div><p>所需 SSH 命令参数是：</p><ul><li><code>-f</code>：后台执行 SSH 命令</li><li><code>-C</code>：允许压缩数据</li><li><code>-N</code>：不执行远程命令</li><li><code>-R</code>：将远程主机的端口转发到本地指定端口</li><li><code>-L</code>：将本地的某个端口转发到远程主机的端口</li><li><code>-p</code>：指定端口</li></ul><h2 id="2-内网主机配置" tabindex="-1"><a class="header-anchor" href="#2-内网主机配置" aria-hidden="true">#</a> 2. 内网主机配置</h2><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">ssh</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-fCNR</span><span style="color:#D4D4D4;"> [B的IP或空]:[B的端口]:[A的IP]:[A的端口] [B的用户名]@[B的IP]</span></span>
<span class="line"></span></code></pre></div><p>示例：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">ssh</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-fCNR</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">7280</span><span style="color:#CE9178;">:localhost:22</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">root@123.123.123.123</span></span>
<span class="line"></span></code></pre></div><h2 id="3-远程主机配置" tabindex="-1"><a class="header-anchor" href="#3-远程主机配置" aria-hidden="true">#</a> 3. 远程主机配置</h2><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">ssh</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-fCNL</span><span style="color:#D4D4D4;"> [A的IP或空]:[A的端口]:[B的IP]:[B的端口] [B的用户名]@[B的IP]</span></span>
<span class="line"></span></code></pre></div><p>示例：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">ssh</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-fCNL</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#CE9178;">:10022:localhost:7280</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">localhost</span></span>
<span class="line"></span></code></pre></div><p>此外，最好给 A 添加自动登录配置，在内网的 A 机器上执行：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">ssh-copy-id</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">alex@123.123.123.123</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-p</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">10022</span></span>
<span class="line"></span></code></pre></div><p>在 A 机器上使用下面的命令来测试是否能自动登录：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">ssh</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">root@123.123.123.123</span></span>
<span class="line"></span></code></pre></div><p>如果登录成功则通过。</p><h2 id="4-测试连接" tabindex="-1"><a class="header-anchor" href="#4-测试连接" aria-hidden="true">#</a> 4. 测试连接</h2><p>如果需要检查各自机器上的 SSH 服务，可以通过下面的命令检查：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">ps</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-aux</span><span style="color:#D4D4D4;"> | </span><span style="color:#DCDCAA;">grep</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">ssh</span></span>
<span class="line"></span></code></pre></div><p>现在连接服务器测试：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">ssh</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-p</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">10022</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">alex@123.123.123.123</span></span>
<span class="line"></span></code></pre></div><h2 id="5-使用-autossh-建立稳定隧道" tabindex="-1"><a class="header-anchor" href="#5-使用-autossh-建立稳定隧道" aria-hidden="true">#</a> 5. 使用 autossh 建立稳定隧道</h2><p>SSH 在网络中断时会丢失连接，为了能稳定连接，我们需要安装 <code>autossh</code>：</p>`,24),k=s("div",{class:"language-bash","data-ext":"sh"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#DCDCAA"}},"sudo"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"apt"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"install"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"autossh")]),a(`
`),s("span",{class:"line"})])])],-1),v=s("div",{class:"language-bash","data-ext":"sh"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#DCDCAA"}},"sudo"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"yum"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"install"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"autossh")]),a(`
`),s("span",{class:"line"})])])],-1),x=c(`<p>使用指令：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">autossh</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-M</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">7281</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-fCNR</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">7280</span><span style="color:#CE9178;">:localhost:22</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">root@123.123.123.123</span></span>
<span class="line"></span></code></pre></div><p>端口 7281 用于监听 SSH 状态，如果失败则重新连接。也需要防火墙允许此端口。</p><p>现在将此命令设置为开机自动启动即可。</p><p>不过机器 A 上的命令也需要自动启动才能保证稳定，如果机器 B 不能稳定运行，也需要此时机器 A 安装 <code>autossh</code>，并使用下面的命令：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">autossh</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-M</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">7281</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-fN</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">-o</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;PubkeyAuthentication=yes&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">-o</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;StrictHostKeyChecking=false&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">-o</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;PasswordAuthentication=no&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">-o</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;ServerAliveInterval 60&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">-o</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;ServerAliveCountMax 3&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">-R</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">123.123</span><span style="color:#CE9178;">.123.123:7280:localhost:22</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">root@123.123.123.123</span></span>
<span class="line"></span></code></pre></div>`,6);function _(g,B){const o=t("router-link"),r=t("Mermaid"),D=t("CodeTabs");return d(),y("div",null,[u,s("nav",C,[s("ul",null,[s("li",null,[n(o,{to:"#1-问题描述"},{default:l(()=>[a("1. 问题描述")]),_:1})]),s("li",null,[n(o,{to:"#2-内网主机配置"},{default:l(()=>[a("2. 内网主机配置")]),_:1})]),s("li",null,[n(o,{to:"#3-远程主机配置"},{default:l(()=>[a("3. 远程主机配置")]),_:1})]),s("li",null,[n(o,{to:"#4-测试连接"},{default:l(()=>[a("4. 测试连接")]),_:1})]),s("li",null,[n(o,{to:"#5-使用-autossh-建立稳定隧道"},{default:l(()=>[a("5. 使用 autossh 建立稳定隧道")]),_:1})])])]),E,A,n(r,{id:"mermaid-12",code:"eJxLL0osyFAIceFSAAJHDSVHK4XEnNQKB0NLIz1DMws9Qz1DAwMlTbC0k4aSk5VCUX5+iYOhkbEeEoYqcNZQcrZSCHCGqVew0dVVAOkxN7IwUNBVABpuZKSkoKtrp+CIpgJoi5ERUIkzRNqZCwCyvx3Q"}),b,n(D,{id:"103",data:[{id:"Ubuntu/Debian"},{id:"CentOS/RedHat"}]},{title0:l(({value:e,isActive:p})=>[a("Ubuntu/Debian")]),title1:l(({value:e,isActive:p})=>[a("CentOS/RedHat")]),tab0:l(({value:e,isActive:p})=>[k]),tab1:l(({value:e,isActive:p})=>[v]),_:1}),x])}const S=i(h,[["render",_],["__file","reverse-proxy.html.vue"]]);export{S as default};
