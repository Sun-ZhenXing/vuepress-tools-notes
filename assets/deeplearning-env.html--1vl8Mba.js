import{_ as c,r as o,o as D,c as r,b as s,a as n,w as p,d as a,e}from"./app-THZs9_px.js";const i={},d=s("h1",{id:"docker-搭建深度学习环境",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#docker-搭建深度学习环境"},[s("span",null,"Docker 搭建深度学习环境")])],-1),y=s("p",null,"每一篇论文都可以使用不同的操作系统、Python 环境、CUDA 版本和其他依赖，为了复现论文或炼丹，通常需要大量的配置。如果能将 CUDA 驱动和 cuDNN 驱动都安装在不同容器中就可以做到每一个项目都是独立环境。",-1),u=s("p",null,"通过上一篇的远程 Docker 连接，我们可以调用远程 Docker 容器开发的能力了。本文将驱动 NVIDIA GPU 来提供 3D 加速或 CUDA 支持的 Docker 环境。",-1),C={class:"table-of-contents"},E=e(`<h2 id="1-安装-nvidia-显卡驱动" tabindex="-1"><a class="header-anchor" href="#1-安装-nvidia-显卡驱动"><span>1. 安装 NVIDIA 显卡驱动</span></a></h2><p>条件：</p><ul><li>主机是 x86_64 架构计算机</li><li>主机拥有 CUDA 支持的 NVIDIA 显卡</li><li>主机安装 Ubuntu 20.04 或更高的系统，建议选择最稳定的，例如当前 Ubuntu 22 并未完全得到第三方支持，等到 Ubuntu 22 被各类生态支持后可以选择 Ubuntu 22</li></ul><p>必须要在主机上安装显卡驱动，但是不需要安装 CUDA 驱动和 cuDNN。</p><p>如果你的主机镜像中已经包含了 NVIDIA 驱动，请忽略这一步。但是这通常不是最新的，可以通过更新驱动提高 CUDA 兼容版本。</p><h3 id="11-禁用-nouveau-驱动" tabindex="-1"><a class="header-anchor" href="#11-禁用-nouveau-驱动"><span>1.1 禁用 Nouveau 驱动</span></a></h3><p>在安装驱动之前需要禁用 Nouveau 驱动，可以通过下面的命令检查当前系统是否正在使用 Nouveau 驱动：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">lspci</span><span style="color:#D4D4D4;"> | </span><span style="color:#DCDCAA;">grep</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">nouveau</span></span>
<span class="line"></span></code></pre></div><p>编辑文件 <code>/etc/modprobe.d/blacklist.conf</code>，如果没有则创建，末尾加入两行：</p><div class="language-properties" data-ext="properties" data-title="properties"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">blacklist nouveau</span></span>
<span class="line"><span style="color:#D4D4D4;">options nouveau </span><span style="color:#569CD6;">modeset</span><span style="color:#D4D4D4;">=0</span></span>
<span class="line"></span></code></pre></div><p>更新配置，然后重启：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">sudo</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">update-initramfs</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-u</span></span>
<span class="line"><span style="color:#DCDCAA;">sudo</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">reboot</span></span>
<span class="line"></span></code></pre></div><p>重启后检查 Nouveau 驱动是否被禁用：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">lspci</span><span style="color:#D4D4D4;"> | </span><span style="color:#DCDCAA;">grep</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">nouveau</span></span>
<span class="line"></span></code></pre></div><p>如果没有内容则正常。</p><h3 id="12-从-nvidia-官网下载安装" tabindex="-1"><a class="header-anchor" href="#12-从-nvidia-官网下载安装"><span>1.2 从 NVIDIA 官网下载安装</span></a></h3>`,16),h={href:"https://www.nvidia.cn/Download/index.aspx?lang=cn",target:"_blank",rel:"noopener noreferrer"},A=e(`<table><thead><tr><th>配置项</th><th>配置示例值</th></tr></thead><tbody><tr><td>产品类型</td><td>GeForce</td></tr><tr><td>产品系列</td><td>GeForce RTX 40 Series</td></tr><tr><td>产品家族</td><td>NVIDIA GeForce RTX 4090</td></tr><tr><td>操作系统</td><td>Linux 64-bit</td></tr><tr><td>下载类型</td><td>生产分支生</td></tr><tr><td>语言</td><td>English (US)</td></tr></tbody></table><p>点击搜索，同意协议后自动下载。</p><p>下载后运行即可：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">sudo</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">bash</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">./NVIDIA-Linux-x86_64-xxx.xx.xx.run</span></span>
<span class="line"></span></code></pre></div><p>安装时可以选择自动配置 Xorg，安装完成后检查驱动是否加载：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">nvidia-smi</span></span>
<span class="line"></span></code></pre></div><p>其中 <code>CUDA Version: xx.x</code> 表示你可以安装的最高版本的 CUDA，而不是你已安装的 CUDA 驱动版本。</p><h2 id="2-安装-nvidia-docker2-相关组件" tabindex="-1"><a class="header-anchor" href="#2-安装-nvidia-docker2-相关组件"><span>2. 安装 nvidia-docker2 相关组件</span></a></h2><p>安装前确保 Docker 被正确安装。</p><p>加入软件镜像源：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">distribution</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">$(</span><span style="color:#DCDCAA;">.</span><span style="color:#CE9178;"> /etc/os-release;</span><span style="color:#DCDCAA;">echo</span><span style="color:#CE9178;"> </span><span style="color:#9CDCFE;">$ID$VERSION_ID</span><span style="color:#CE9178;">)</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    &amp;&amp; </span><span style="color:#DCDCAA;">curl</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-s</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-L</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">https://nvidia.github.io/nvidia-docker/gpgkey</span><span style="color:#D4D4D4;"> | </span><span style="color:#DCDCAA;">sudo</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">apt-key</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">add</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">-</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    &amp;&amp; </span><span style="color:#DCDCAA;">curl</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-s</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-L</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">https://nvidia.github.io/nvidia-docker/</span><span style="color:#9CDCFE;">$distribution</span><span style="color:#CE9178;">/nvidia-docker.list</span><span style="color:#D4D4D4;"> | </span><span style="color:#DCDCAA;">sudo</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">tee</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">/etc/apt/sources.list.d/nvidia-docker.list</span></span>
<span class="line"></span></code></pre></div><p>更新并安装：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">sudo</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">apt-get</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">update</span></span>
<span class="line"><span style="color:#DCDCAA;">sudo</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">apt-get</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-y</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">nvidia-docker2</span></span>
<span class="line"></span></code></pre></div><p>安装过程将自动安装 NVIDIA Container Toolkit。</p><p><code>default-runtime</code> 配置可以让 <code>docker run</code> 默认使用 nvidia-docker 组件提供的环境。此时 <code>/etc/docker/daemon.json</code> 配置如下：</p><div class="language-json" data-ext="json" data-title="json"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;default-runtime&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;nvidia&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">&quot;runtimes&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">&quot;nvidia&quot;</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">&quot;path&quot;</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&quot;nvidia-container-runtime&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">&quot;runtimeArgs&quot;</span><span style="color:#D4D4D4;">: []</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p>如果你不修改配置，也可以在 <code>docker run</code> 时使用 <code>--runtime=nvidia</code> 来指定运行时。</p><p>重启 Docker 来应用：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">sudo</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">systemctl</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">restart</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">docker</span></span>
<span class="line"></span></code></pre></div><p>现在，拉取镜像来测试是否可用：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">run</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-it</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--rm</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--gpus</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">all</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">nvidia/cuda:11.6.0-base-ubuntu20.04</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">nvidia-smi</span></span>
<span class="line"></span></code></pre></div><p>如果正确打印了配置参数则表示正确。</p><h2 id="3-使用镜像" tabindex="-1"><a class="header-anchor" href="#3-使用镜像"><span>3. 使用镜像</span></a></h2><p>可以使用 <code>nvidia-docker</code> 来创建容器命令：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">nvidia-docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">run</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-it\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">--runtime=nvidia\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">-v</span><span style="color:#D4D4D4;"> &lt;</span><span style="color:#CE9178;">宿主机绝对路径目</span><span style="color:#D4D4D4;">录&gt;</span><span style="color:#CE9178;">:</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#CE9178;">容器内目</span><span style="color:#D4D4D4;">录&gt;</span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">--name</span><span style="color:#D4D4D4;"> &lt;</span><span style="color:#CE9178;">容器</span><span style="color:#D4D4D4;">名&gt; &lt;</span><span style="color:#CE9178;">镜像</span><span style="color:#D4D4D4;">名&gt;</span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">/bin/bash</span></span>
<span class="line"></span></code></pre></div><p>我们使用正常的方式创建容器，后台运行：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">run</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-itd</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">--gpus</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">all</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">--name</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">ub-cu11.6</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">nvidia/cuda:11.6.0-base-ubuntu20.04</span></span>
<span class="line"></span></code></pre></div><p>然后进入容器：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">exec</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-it</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">ub-cu11.6</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">/bin/bash</span></span>
<span class="line"></span></code></pre></div><p>安装基础工具：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">apt</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">update</span></span>
<span class="line"><span style="color:#DCDCAA;">apt</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">upgrade</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-y</span></span>
<span class="line"><span style="color:#DCDCAA;">apt</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">sudo</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">vim</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">wget</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">curl</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">git</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">zip</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">unzip</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">tar</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-y</span></span>
<span class="line"></span></code></pre></div><p>添加用户：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">useradd</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-r</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-m</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-s</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">/bin/bash</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">admin</span></span>
<span class="line"><span style="color:#6A9955;"># 如果提示输入密码则输入密码</span></span>
<span class="line"><span style="color:#6A9955;"># 如果没有提示则使用下面的命令修改密码</span></span>
<span class="line"><span style="color:#DCDCAA;">passwd</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">admin</span></span>
<span class="line"></span></code></pre></div><p>安装 Miniconda3：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">su</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">admin</span></span>
<span class="line"><span style="color:#DCDCAA;">wget</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span></span>
<span class="line"><span style="color:#DCDCAA;">bash</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">./Miniconda3-latest-Linux-x86_64.sh</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-b</span></span>
<span class="line"><span style="color:#DCDCAA;">echo</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;export PATH=&quot;/home/admin/miniconda3/bin:$PATH&quot;&#39;</span><span style="color:#D4D4D4;"> &gt; </span><span style="color:#CE9178;">~/.bashrc</span></span>
<span class="line"><span style="color:#DCDCAA;">source</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">~/.bashrc</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">conda</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">init</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">bash</span></span>
<span class="line"><span style="color:#DCDCAA;">exit</span></span>
<span class="line"></span></code></pre></div><p>然后继续进入 <code>admin</code> 环境，就会自动进入 <code>conda (base)</code> 环境：</p><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">su</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">admin</span></span>
<span class="line"></span></code></pre></div>`,37);function b(k,v){const l=o("router-link"),t=o("ExternalLinkIcon");return D(),r("div",null,[d,y,u,s("nav",C,[s("ul",null,[s("li",null,[n(l,{to:"#1-安装-nvidia-显卡驱动"},{default:p(()=>[a("1. 安装 NVIDIA 显卡驱动")]),_:1}),s("ul",null,[s("li",null,[n(l,{to:"#11-禁用-nouveau-驱动"},{default:p(()=>[a("1.1 禁用 Nouveau 驱动")]),_:1})]),s("li",null,[n(l,{to:"#12-从-nvidia-官网下载安装"},{default:p(()=>[a("1.2 从 NVIDIA 官网下载安装")]),_:1})])])]),s("li",null,[n(l,{to:"#2-安装-nvidia-docker2-相关组件"},{default:p(()=>[a("2. 安装 nvidia-docker2 相关组件")]),_:1})]),s("li",null,[n(l,{to:"#3-使用镜像"},{default:p(()=>[a("3. 使用镜像")]),_:1})])])]),E,s("p",null,[a("访问驱动下载的官方网站："),s("a",h,[a("https://www.nvidia.cn/Download/index.aspx?lang=cn"),n(t)]),a("，然后选择你的显卡。")]),A])}const x=c(i,[["render",b],["__file","deeplearning-env.html.vue"]]);export{x as default};
