import{_ as e,r as o,o as c,c as i,b as s,a as l,w as p,d as n,e as r}from"./app-9ZKrydrW.js";const t={},D=s("h1",{id:"示例qt-designer",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#示例qt-designer","aria-hidden":"true"},"#"),n(" 示例：Qt Designer")],-1),d={class:"table-of-contents"},y=r(`<h2 id="1-安装-qt-designer" tabindex="-1"><a class="header-anchor" href="#1-安装-qt-designer" aria-hidden="true">#</a> 1. 安装 Qt Designer</h2><p>本文在 Docker 内安装 Qt Designer，以便在 Docker 内开发 Qt 6 应用程序。</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">run</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-it</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">-v</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">/etc/localtime:/etc/localtime:ro</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">-v</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">/tmp/.X11-unix:/tmp/.X11-unix</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">-e</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">DISPLAY=unix</span><span style="color:#9CDCFE;">$DISPLAY</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">--name</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">py-ui</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">python:3.10-bookworm</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">/bin/bash</span></span>
<span class="line"></span></code></pre></div><p>执行上述命令将创建一个交互式终端，下面在此容器的终端内执行。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;"># 更新源，可选</span></span>
<span class="line"><span style="color:#DCDCAA;">sed</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-i</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;s/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g&#39;</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">/etc/apt/sources.list.d/debian.sources</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 更新软件包</span></span>
<span class="line"><span style="color:#DCDCAA;">apt</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">update</span></span>
<span class="line"><span style="color:#DCDCAA;">apt</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">upgrade</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-y</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 更新 pip 和 pypi 源，可选</span></span>
<span class="line"><span style="color:#DCDCAA;">python</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-m</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">pip</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-i</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">https://pypi.tuna.tsinghua.edu.cn/simple/</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--upgrade</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">pip</span></span>
<span class="line"><span style="color:#DCDCAA;">pip</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">config</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">set</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">global.index-url</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">https://pypi.tuna.tsinghua.edu.cn/simple/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 安装 PySide6</span></span>
<span class="line"><span style="color:#DCDCAA;">pip</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">PySide6</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 安装 Qt Designer</span></span>
<span class="line"><span style="color:#DCDCAA;">apt</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">designer-qt6</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-y</span></span>
<span class="line"><span style="color:#DCDCAA;">apt</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">libxcb-cursor0</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-y</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 运行 Qt Designer</span></span>
<span class="line"><span style="color:#DCDCAA;">pyside6-designer</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时应该可以看到 Qt Designer 的界面了。</p><p>如果出现错误，可以尝试调试 Qt Designer：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">QT_DEBUG_PLUGINS</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">pyside6-designer</span></span>
<span class="line"></span></code></pre></div><p>如果出现库缺失，尝试安装缺失的库即可。</p><h2 id="2-测试-pyside6-程序" tabindex="-1"><a class="header-anchor" href="#2-测试-pyside6-程序" aria-hidden="true">#</a> 2. 测试 PySide6 程序</h2><p>现在创建 <code>main.py</code>：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> sys</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> PySide6.QtWidgets </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> QApplication, QMainWindow</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">__name__</span><span style="color:#D4D4D4;"> == </span><span style="color:#CE9178;">&#39;__main__&#39;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    app = QApplication(sys.argv)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    window = QMainWindow()</span></span>
<span class="line"><span style="color:#D4D4D4;">    window.show()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    sys.exit(app.exec())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后运行：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">python</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">main.py</span></span>
<span class="line"></span></code></pre></div><p>这时 Docker 内的 Qt 窗体已经能正确展示在桌面上了。</p>`,15);function u(v,C){const a=o("router-link");return c(),i("div",null,[D,s("nav",d,[s("ul",null,[s("li",null,[l(a,{to:"#1-安装-qt-designer"},{default:p(()=>[n("1. 安装 Qt Designer")]),_:1})]),s("li",null,[l(a,{to:"#2-测试-pyside6-程序"},{default:p(()=>[n("2. 测试 PySide6 程序")]),_:1})])])]),y])}const b=e(t,[["render",u],["__file","demo-qt-designer.html.vue"]]);export{b as default};
