import{_ as d,M as n,p as s,q as o,R as c,t as a,N as r,V as i,a1 as e}from"./framework-546207d5.js";const h={},l=e(`<h1 id="开发环境" tabindex="-1"><a class="header-anchor" href="#开发环境" aria-hidden="true">#</a> 开发环境</h1><h2 id="_1-c-c" tabindex="-1"><a class="header-anchor" href="#_1-c-c" aria-hidden="true">#</a> 1. C/C++</h2><p>目前没有对 GCC 的支持，有对 Clang 的支持：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pkg <span class="token function">install</span> clang
</code></pre></div><p>如果需要使用 CMake，可以安装 CMake：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pkg <span class="token function">install</span> cmake
</code></pre></div><h2 id="_2-python" tabindex="-1"><a class="header-anchor" href="#_2-python" aria-hidden="true">#</a> 2. Python</h2><h3 id="_2-1-python3" tabindex="-1"><a class="header-anchor" href="#_2-1-python3" aria-hidden="true">#</a> 2.1 Python3</h3><p>默认安装了 Python3 最新版本。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pkg <span class="token function">install</span> python
</code></pre></div><h3 id="_2-2-python2" tabindex="-1"><a class="header-anchor" href="#_2-2-python2" aria-hidden="true">#</a> 2.2 Python2</h3><p>Python 2 已经不再维护，但是有些软件还是需要 Python 2 的支持，所以可以安装 Python 2：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pkg <span class="token function">install</span> python2
</code></pre></div><h3 id="_2-3-python3-常见库" tabindex="-1"><a class="header-anchor" href="#_2-3-python3-常见库" aria-hidden="true">#</a> 2.3 Python3 常见库</h3><p>由于直接使用 <code>pip</code> 安装一些 C 扩展库会出现问题，所以 Termux 提供了一些常见的 Python 库，下面的库可以直接使用 <code>pkg install</code> 安装：</p><table><thead><tr><th>库名</th><th>说明</th></tr></thead><tbody><tr><td><code>python-apsw</code></td><td><code>apsw</code></td></tr><tr><td><code>python-apt</code></td><td>Python 下的 APT</td></tr><tr><td><code>python-bcrypt</code></td><td><code>bcrypt</code></td></tr><tr><td><code>python-cryptography</code></td><td><code>cryptography</code></td></tr><tr><td><code>python-ensurepip-wheels</code></td><td><code>ensurepip</code></td></tr><tr><td><code>python-lameenc</code></td><td><code>lameenc</code></td></tr><tr><td><code>python-numpy</code></td><td>NumPy</td></tr><tr><td><code>python-numpy-static</code></td><td>NumPy 静态库</td></tr><tr><td><code>python-pillow</code></td><td>Pillow</td></tr><tr><td><code>python-pip</code></td><td><code>pip</code></td></tr><tr><td><code>python-static</code></td><td>Python 静态库</td></tr><tr><td><code>python-tkinter</code></td><td><code>tkinter</code></td></tr><tr><td><code>python-tldp</code></td><td><code>tldp</code></td></tr><tr><td><code>python-torch</code></td><td>PyTorch</td></tr><tr><td><code>python-torch-static</code></td><td>PyTorch 静态库</td></tr><tr><td><code>python-torchvision</code></td><td><code>torchvision</code></td></tr><tr><td><code>python-xcbgen</code></td><td><code>xcbgen</code></td></tr><tr><td><code>python-xlib</code></td><td><code>xlib</code></td></tr></tbody></table><h2 id="_3-java" tabindex="-1"><a class="header-anchor" href="#_3-java" aria-hidden="true">#</a> 3. Java</h2><p>目前仅支持 OpenJDK 17：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pkg <span class="token function">install</span> openjdk-17
</code></pre></div><h2 id="_4-node-js" tabindex="-1"><a class="header-anchor" href="#_4-node-js" aria-hidden="true">#</a> 4. Node.js</h2><p>推荐安装 Node.js LTS 版本：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pkg <span class="token function">install</span> nodejs-lts
</code></pre></div><h2 id="_5-mariadb" tabindex="-1"><a class="header-anchor" href="#_5-mariadb" aria-hidden="true">#</a> 5. MariaDB</h2><p>目前仅支持 MariaDB，不过大部分命令兼容 MySQL：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pkg <span class="token function">install</span> mariadb

<span class="token comment"># 初始化</span>
mysql_install_db

<span class="token comment"># 启动</span>
<span class="token function">nohup</span> mysqld <span class="token operator">&amp;</span>

<span class="token comment"># 退出</span>
<span class="token function">pkill</span> mysqld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-nginx" tabindex="-1"><a class="header-anchor" href="#_6-nginx" aria-hidden="true">#</a> 6. Nginx</h2>`,26),p=e(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pkg <span class="token function">install</span> nginx
</code></pre></div><h2 id="_7-golang" tabindex="-1"><a class="header-anchor" href="#_7-golang" aria-hidden="true">#</a> 7. Golang</h2><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pkg <span class="token function">install</span> golang
</code></pre></div><h2 id="_8-rust" tabindex="-1"><a class="header-anchor" href="#_8-rust" aria-hidden="true">#</a> 8. Rust</h2><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pkg <span class="token function">install</span> rust
</code></pre></div>`,5);function u(g,b){const t=n("RouterLink");return s(),o("div",null,[l,c("p",null,[a("参见 "),r(t,{to:"/shell/termux/share-file.html#_1-2-%E4%BD%BF%E7%94%A8-nginx"},{default:i(()=>[a("共享文件：使用 Nginx")]),_:1}),a("。")]),p])}const v=d(h,[["render",u],["__file","devel-envs.html.vue"]]);export{v as default};
